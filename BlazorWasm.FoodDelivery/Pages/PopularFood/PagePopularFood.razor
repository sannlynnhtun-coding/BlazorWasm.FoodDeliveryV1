@inject NotificationStateContainer StateContainer

<section>
    <div class="container">
        <div class="row">
            <div class="text-center col-lg-12">
                <h2>Popular Foods</h2>
            </div>
            <div class="col-lg-12">
                <div class="food__category d-flex align-items-center justify-content-center gap-4">
                    <button type="button" class="all__btn  @(category_id == 0 ? "foodBtnActive":"") " @onclick="()=> FindFoodByCategory()">All</button>
                    @foreach (var item in FoodCategoryList)
                    {
                        string imagePath = $"assets/img/food-category/{item.category_id}.png";
                        <button type="button" class="d-flex align-items-center gap-2 @(category_id == item.category_id ? "foodBtnActive":"") " @onclick="()=> FindFoodByCategory(item.category_id)">
                            <img src="@(imagePath)"
                                 alt="">@item.category_name
                        </button>
                    }
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-12 col-lg-12 mt-3">
                <div class="search__widget d-flex align-items-center justify-content-between ">
                    <input type="text" placeholder="I'm looking for...." @onchange="Search">
                    <span><i class="ri-search-line"></i></span>
                </div>
            </div>
            @if (foodPagination != null)
            {
                foreach (var item in foodPagination.FoodList)
                {
                    string name = item.food_name;
                    string img = $"assets/img/food/{item.food_id}.jpg";
                    decimal price = item.food_price;
                    string display = (string.IsNullOrEmpty(name.Trim()) ||
                                     name.ToLower().Contains(keyword.ToLower())) ? "" : "display : none;";
                    <div class="mt-5 col-6 col-sm-6 col-md-4 col-lg-3" style="@display">
                        <div class="product__item">
                            <div class="product__img">
                                <img src="@img"
                                     alt="product-img" class="w-50">
                            </div>
                            <div class="product__content">
                                <h5 style="height:47px;">
                                    <a href="javascript:void(0);">
                                        @name
                                    </a>
                                </h5>
                                <div class=" d-flex align-items-center justify-content-between ">
                                    <span class="product__price">
                                        $@price
                                    </span>
                                    <button type="button" class="addTOCart__btn" @onclick="()=>AddToCard(item)">
                                        Add
                                        to Cart
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</section>
@code {
    private List<FoodCategoryModel> FoodCategoryList { get; set; } = new();
    private List<FoodModel> FoodList { get; set; } = new();
    private FoodPaginationResponseModel foodPagination;
    private int category_id = 0;
    private int count = 0;
    private string keyword = "";
    protected override void OnInitialized()
    {
        FoodCategoryList = _FoodService.FoodCategoryList;
        FindFoodByCategory();
    }

    void FindFoodByCategory(int categoryId = 0)
    {
        category_id = categoryId;
        foodPagination = _FoodService.GetFoods(categoryId);
        StateHasChanged();
    }

    void AddToCard(FoodModel item)
    {
        count++;
        StateContainer.Property = count.ToString();
    }

    void Search(ChangeEventArgs e)
    {
        keyword = e.Value.ToString();
    }
}
